<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:d="jelly:define" xmlns:f="/lib/form" xmlns:xb="com/sic/bb/xcodeplugin/XcodeBuilder/lib">		
	
	<!-- get global vars -->
	
	<j:set var="builder" value="${instance}" defaultValue="${descriptor}" />
	<j:set var="workspace" value="${it.getSomeWorkspace().toString()}" />
	
	<!--    -->

	<j:choose>
		<!-- something is missing -->
	
		<j:when test="${it.getScm().getClass() == 'class hudson.scm.NullSCM'}">
			<xb:singleEntry mainStyle="padding:20px 0 0 10;">
				<span style="font-weight:bold;">${%Warning: please configure a SCM first, save and poll the SCM, via starting a build}</span>
			</xb:singleEntry>
		</j:when>
		
		<j:when test="${!it.getSomeWorkspace().exists()}">
			<xb:singleEntry mainStyle="padding:20px 0 0 10px;">
				<span style="font-weight:bold;">${%Warning: you've to poll SCM first, via starting a build}</span>
			</xb:singleEntry>
		</j:when>
		
		
		<!-- everything is ok -->
		
		<j:otherwise>
			<xb:singleEntry title="${%Project directory}" help="help-projectdir.html" titleStyle="vertical-align:middle; padding:15px 0 0 14px;" mainStyle="padding:15px 0 0 5px;" helpStyle="padding:15px 0 0 0" helpAreaStyle="padding:0 0 0 14px;">
				<select name="ProjectDir" field="ProjectDir" 
						onChange="refreshTargets(	'targets',
													'${rootURL}/builder/XcodeBuilder/ajaxTargets',
													'${workspace}/' + ProjectDir.options[ProjectDir.selectedIndex].value)">
				
				<j:set var="loop" value="0" />
				<j:set var="currentProjectDir" value="${builder.getProjectDir()}" />
				
				<j:forEach items="${descriptor.getProjectDirs(workspace)}" var="projectDir">
					<j:choose>
						<j:when test="${empty(projectDir) and !empty(currentProjectDir)}">
							<option value="">${%project root dir}</option>
							<j:set var="loop" value="1" />
						</j:when>
						<j:when test="${empty(projectDir) and empty(currentProjectDir)}">
							<option value="" selected="selected">${%project root dir}</option>
							<j:set var="loop" value="1" />
						</j:when>
						<j:when test="${currentProjectDir != projectDir}">
							<option value="${projectDir}">${projectDir}</option>
							
							<j:if test="${loop == 0 and (builder == descriptor or empty(currentProjectDir))}">
								<j:set scope="parent" var="workspace" value="${workspace + '/' + projectDir}" />
								<j:set var="loop" value="1" />
							</j:if>
						</j:when>
						<j:otherwise>
							<option value="${projectDir}" selected="selected">${projectDir}</option>
							<j:set var="loop" value="1" />
						</j:otherwise>
					</j:choose>
				</j:forEach>
				</select>
			</xb:singleEntry>
			
			<j:set scope="parent" var="workspace" value="${workspace}" />
			
			<xb:singleEntry title="${%IPA filename}" help="help-ipafilename.html" titleStyle="vertical-align:middle; padding:4px 0 0 14px;" mainStyle="padding:4px 0 0 5px;" helpStyle="padding:4px 0 0 0;" helpAreaStyle="padding:0 0 0 14px;">
			<j:choose>
				<j:when test="${descriptor.getIpaFilenameGlobal()}">
					<input name="IpaFilename" type="text" value="${descriptor.getIpaFilename()}" disabled="disabled" style="width:100%;"/>
				</j:when>
				<j:otherwise>
					<f:textbox field="IpaFilename" default="${descriptor.getIpaFilename()}" />
				</j:otherwise>
			</j:choose>
			</xb:singleEntry>
			
			<xb:singleEntry title="${%use Xcode for cleanup}" help="help-xcodeclean.html" titleStyle="vertical-align:middle; padding:0 0 0 14px;"  helpAreaStyle="padding:0 0 0 14px;">
			<j:choose>
				<j:when test="${descriptor.getXcodeCleanGlobal()}">
					<input name="XcodeClean" type="checkbox" checked="${descriptor.getXcodeClean()}" disabled="disabled" />
				</j:when>
				<j:otherwise>
					<f:checkbox field="XcodeClean" default="${descriptor.getXcodeClean()}" />
				</j:otherwise>
			</j:choose>
			</xb:singleEntry>
			
			<tr>
				<td style="padding:10px 0 0 0;"><st:nbsp /></td>
				<td style="padding:10px 0 0 14px;"><span style="font-weight:bold;">${%Build Targets}:</span></td>
			</tr>
			
			<tr>
				<td style="padding:10px 0 0 0;"><st:nbsp /></td>
				<td colspan="2" style="padding:10px 0 0 0;">
			
				
				<!-- Targets/Buildconfigurations -->
			
					<div id="targets">			
					<table style="width:100%; padding:0 0 0 20px;">					
					<j:forEach items="${builder.getBuildTargets(workspace)}" var="target">
						<f:optionalBlock title="${target}" checked="${builder.subMenuUsed(target)}">
							<td>
							<table style="width:100%; padding:5px 0 5px 23px">
							<tr>
								<td style="padding:0 0 5px 0;"><span style="font-weight:bold;">${%Build Configurations}:</span></td>
							</tr>
							
							<j:forEach items="${builder.getBuildConfigurations(workspace)}" var="config">
								<j:set var="subMenuUsed" value="${builder.subMenuUsed(target + '|' + config)}" />
								
								<f:optionalBlock title="${config}" checked="${subMenuUsed}">
									<td>
									<table style="width:100%; padding:5px 0 0 21px;">
										<xb:singleEntry title="${%clean before build:}" noLeftSpace="true" titleStyle="vertical-align:middle;">
										<j:choose>
											<j:when test="${descriptor.getCleanBeforeBuildGlobal()}">
												<input type="checkbox" name="${target}|${config}|clean" checked="${descriptor.getCleanBeforeBuild()}" disabled="disabled" />
											</j:when>
											<j:otherwise>
												<j:choose>
													<j:when test="${subMenuUsed}">
														<f:checkbox field="${target}|${config}|clean" checked="${builder.getBooleanPreference(target + '|' + config + '|clean')}" />
													</j:when>
													<j:otherwise>
														<f:checkbox field="${target}|${config}|clean" checked="${descriptor.getCleanBeforeBuild()}" />
													</j:otherwise>
												</j:choose>
											</j:otherwise>
										</j:choose>
										</xb:singleEntry>
										
										<xb:singleEntry title="${%create IPA:}" noLeftSpace="true" titleStyle="vertical-align:middle;">
										<j:choose>
											<j:when test="${descriptor.getCreateIpaGlobal()}">
												<input type="checkbox" name="${target}|${config}|ipa" checked="${descriptor.getCreateIpa()}" disabled="disabled" />												
											</j:when>
											<j:otherwise>
												<j:choose>
													<j:when test="${subMenuUsed}">
														<f:checkbox field="${target}|${config}|ipa" checked="${builder.getBooleanPreference(target + '|' + config  + '|ipa')}" />
													</j:when>
													<j:otherwise>
														<f:checkbox field="${target}|${config}|ipa" checked="${descriptor.getCreateIpa()}" />
													</j:otherwise>
												</j:choose>
											</j:otherwise>
										</j:choose>
										</xb:singleEntry>
										
										<!--
										<xb:singleEntry title="${%use Hudson versioning:}" noLeftSpace="true" titleStyle="vertical-align:middle;">
										<j:choose>
											<j:when test="${descriptor.getUseHudsonVersioningGlobal()}">
												<input type="checkbox" name="${target}|${config}|versioning" checked="${descriptor.getUseHudsonVersioning()}" disabled="disabled" />												
											</j:when>
											<j:otherwise>
												<j:choose>
													<j:when test="${subMenuUsed}">
														<f:checkbox field="${target}|${config}|versioning" checked="${builder.getBooleanPreference(target + '|' + config  + '|versioning')}" />
													</j:when>
													<j:otherwise>
														<f:checkbox field="${target}|${config}|versioning" checked="${descriptor.getUseHudsonVersioning()}" />
													</j:otherwise>
												<j:choose>
											</j:otherwise>
										</j:choose>
										</xb:singleEntry>
										-->
										
									</table>
									</td>
								</f:optionalBlock>
							</j:forEach>
							</table>
							</td>
						</f:optionalBlock>
					</j:forEach>
					</table>
					</div>
					
				</td>
			</tr>
		</j:otherwise>
	</j:choose>
	
	<script defer="defer">
		function refreshTargets(id,url,projectDir) {
	        new Ajax.Request(url, {
	        	method: 'post',
	        	parameters: {
	        		projectDir: projectDir
	        	},
	        	onLoading: function() {
	        		var hist = $(id);
	                var p = hist.parentNode;
	                var next = hist.nextSibling;
	                p.removeChild(hist);
	                
	                var style_attr = document.createAttribute('style');
	                style_attr.nodeValue = 'margin:15px 0px 10px 40px;';
	                
	                var span_loading = document.createElement('span');
	                span_loading.setAttributeNode(style_attr);
	                span_loading.appendChild(document.createTextNode('loading...'));
	                
	                var div_targets = document.createElement('div');
	                div_targets.id = 'targets';
	                div_targets.appendChild(span_loading);
	                
	                var div = document.createElement('div');
	                div.appendChild(div_targets);
	
	                var node = div.firstChild;
	                p.insertBefore(node, next);
	
	                Behaviour.applySubtree(node);
	        	},
	            onSuccess: function(response) {
	                var hist = $(id);
	                var p = hist.parentNode;
	                var next = hist.nextSibling;
	                p.removeChild(hist);
	
	                var div = document.createElement('div');
	                div.innerHTML = response.responseText;
	
	                var node = div.firstChild;
	                p.insertBefore(node, next);
	
	                Behaviour.applySubtree(node);
	            }
	        });
	    };  
	</script>
</j:jelly>